{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tadeu\\\\Desktop\\\\Curso React Udemy\\\\6_SECRET_WORD\\\\secretword\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// CSS\nimport './App.css';\n\n// React\nimport { useCallBack, useEffect, useState } from 'react';\n\n// Data\nimport { wordsList } from './data/words';\n\n// Components\nimport StartScreen from './components/StartScreen';\nimport Game from './components/Game';\nimport GameOver from './components/GameOver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stages = [{\n  id: 1,\n  name: \"start\"\n}, {\n  id: 2,\n  name: \"game\"\n}, {\n  id: 3,\n  name: \"end\"\n}];\nfunction App() {\n  _s();\n  const [gameStage, setGameStage] = useState(stages[0].name);\n  const [words] = useState(wordsList);\n  const [pickedWord, setPickedWord] = useState(\"\");\n  const [pickedCategory, setPickedCategory] = useState(\"\");\n  const [letters, setLetters] = useState([]);\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [guesses, setGuesses] = useState(3);\n  const [score, setScore] = useState(0);\n  const pickWordAndCategory = () => {\n    // Pick random category\n    const categories = Object.keys(words);\n    const category = categories[Math.floor(Math.random() * Object.keys(categories).length)];\n    console.log(category);\n\n    // Pick random word\n    const word = words[category][Math.floor(Math.random() * words[category].length)];\n    console.log(word);\n    return {\n      category,\n      word\n    };\n  };\n\n  // Navigation\n  const startGame = () => {\n    const {\n      category,\n      word\n    } = pickWordAndCategory();\n    console.log(category, word);\n\n    // Create array letters\n    let wordLetters = word.split(\"\");\n    wordLetters = wordLetters.map(a => a.toLowerCase());\n    // console.log(wordLetters)\n\n    // Fill states\n    setPickedCategory(category);\n    setPickedWord(word);\n    setLetters(wordLetters);\n    setGameStage(stages[1].name);\n  };\n  const backHome = () => {\n    setGameStage(stages[0].name);\n  };\n  const endScreen = () => {\n    setGameStage(stages[2].name);\n  };\n  const retry = () => {\n    setGameStage(stages[1].name);\n  };\n  const clearLetterStates = () => {\n    setGuessedLetters([]);\n    setWrongLetters([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [gameStage === 'start' && /*#__PURE__*/_jsxDEV(StartScreen, {\n      startGame: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }, this), gameStage === 'game' && /*#__PURE__*/_jsxDEV(Game, {\n      backHome: backHome,\n      endScreen: endScreen,\n      word: pickedWord,\n      tip: pickedCategory,\n      letters: letters,\n      guessedLetters: guessedLetters,\n      wrongLetters: wrongLetters,\n      guesses: guesses,\n      score: score,\n      clear: clearLetterStates,\n      setScore: setScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), gameStage === 'end' && /*#__PURE__*/_jsxDEV(GameOver, {\n      retry: retry,\n      backHome: backHome,\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sdpDuVua5ZG5nxfNnGUM/YUkGpc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallBack","useEffect","useState","wordsList","StartScreen","Game","GameOver","stages","id","name","App","gameStage","setGameStage","words","pickedWord","setPickedWord","pickedCategory","setPickedCategory","letters","setLetters","guessedLetters","setGuessedLetters","wrongLetters","setWrongLetters","guesses","setGuesses","score","setScore","pickWordAndCategory","categories","Object","keys","category","Math","floor","random","length","console","log","word","startGame","wordLetters","split","map","a","toLowerCase","backHome","endScreen","retry","clearLetterStates"],"sources":["C:/Users/Tadeu/Desktop/Curso React Udemy/6_SECRET_WORD/secretword/src/App.js"],"sourcesContent":["// CSS\nimport './App.css';\n\n// React\nimport {useCallBack, useEffect, useState} from 'react';\n\n// Data\nimport {wordsList} from './data/words'\n\n// Components\nimport StartScreen from './components/StartScreen';\nimport Game from './components/Game';\nimport GameOver from './components/GameOver';\n\nconst stages = [\n  {id: 1, name: \"start\"},\n  {id: 2, name: \"game\"},\n  {id: 3, name: \"end\"}\n]\n\nfunction App() {\n  const [gameStage, setGameStage] = useState(stages[0].name)\n  const [words] = useState(wordsList)\n\n  const [pickedWord, setPickedWord] = useState(\"\")\n  const [pickedCategory, setPickedCategory] = useState(\"\")\n  const [letters, setLetters] = useState([])\n\n  const [guessedLetters, setGuessedLetters] = useState([])\n  const [wrongLetters, setWrongLetters] = useState([])\n  const [guesses, setGuesses] = useState(3)\n  const [score, setScore] = useState(0)\n\n  const pickWordAndCategory = () => {\n    // Pick random category\n    const categories = Object.keys(words)\n    const category = categories[Math.floor(Math.random() * Object.keys(categories).length)]\n    console.log(category)\n\n    // Pick random word\n    const word = words[category][Math.floor(Math.random() * words[category].length)]\n    console.log(word)\n\n    return {category, word}\n  }\n\n  // Navigation\n  const startGame = () => {\n    const {category, word} = pickWordAndCategory()\n    console.log(category, word)\n\n    // Create array letters\n    let wordLetters = word.split(\"\")\n    wordLetters = wordLetters.map((a) => a.toLowerCase())\n    // console.log(wordLetters)\n\n    // Fill states\n    setPickedCategory(category)\n    setPickedWord(word)\n    setLetters(wordLetters)\n\n    setGameStage(stages[1].name)\n  }\n  const backHome = () => {\n    setGameStage(stages[0].name)\n  }\n  const endScreen = () => {\n    setGameStage(stages[2].name)\n  }\n  const retry = () => {\n    setGameStage(stages[1].name)\n  }\n\n  const clearLetterStates = () => {\n    setGuessedLetters([])\n    setWrongLetters([])\n  }\n\n\n  return (\n    <div className=\"App\">\n      {gameStage === 'start' && <StartScreen startGame={startGame} />}\n      {gameStage === 'game' &&\n      <Game \n        backHome={backHome}\n        endScreen={endScreen}\n        word={pickedWord}\n        tip={pickedCategory}\n        letters={letters}\n        guessedLetters={guessedLetters}\n        wrongLetters={wrongLetters}\n        guesses={guesses}\n        score={score}\n        clear={clearLetterStates}\n        setScore={setScore}\n\n      />}\n      {gameStage === 'end' && <GameOver retry={retry} backHome={backHome} score={score}/>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}