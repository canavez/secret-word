{"ast":null,"code":"import _slicedToArray from\"C:/Users/Tadeu/Desktop/secret-word/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// CSS\nimport'./App.css';// React\nimport{useState}from'react';// Data\nimport{wordsList}from'./data/words';// Components\nimport StartScreen from'./components/StartScreen';import Game from'./components/Game';import GameOver from'./components/GameOver';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var stages=[{id:1,name:\"start\"},{id:2,name:\"game\"},{id:3,name:\"end\"}];function App(){var _useState=useState(stages[0].name),_useState2=_slicedToArray(_useState,2),gameStage=_useState2[0],setGameStage=_useState2[1];var _useState3=useState(wordsList),_useState4=_slicedToArray(_useState3,1),words=_useState4[0];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),pickedWord=_useState6[0],setPickedWord=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),pickedCategory=_useState8[0],setPickedCategory=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),letters=_useState10[0],setLetters=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),guessedLetters=_useState12[0],setGuessedLetters=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),wrongLetters=_useState14[0],setWrongLetters=_useState14[1];var _useState15=useState(3),_useState16=_slicedToArray(_useState15,2),guesses=_useState16[0],setGuesses=_useState16[1];var _useState17=useState(0),_useState18=_slicedToArray(_useState17,2),score=_useState18[0],setScore=_useState18[1];var pickWordAndCategory=function pickWordAndCategory(){// Pick random category\nvar categories=Object.keys(words);var category=categories[Math.floor(Math.random()*Object.keys(categories).length)];// Pick random word\nvar word=words[category][Math.floor(Math.random()*words[category].length)];return{category:category,word:word};};// Navigation\nvar startGame=function startGame(){var _pickWordAndCategory=pickWordAndCategory(),category=_pickWordAndCategory.category,word=_pickWordAndCategory.word;// Create array letters\nvar wordLetters=word.split(\"\");wordLetters=wordLetters.map(function(a){return a.toLowerCase();});// console.log(wordLetters)\n// Fill states\nsetPickedCategory(category);setPickedWord(word);setLetters(wordLetters);setGuessedLetters([]);setWrongLetters([]);setGuesses(3);setGameStage(stages[1].name);};var backHome=function backHome(){setGameStage(stages[0].name);};var endScreen=function endScreen(){setGameStage(stages[2].name);};var retry=function retry(){setGameStage(stages[1].name);};var clearLetterStates=function clearLetterStates(){setGuessedLetters([]);setWrongLetters([]);};var addScore=function addScore(){setScore(function(prev){return prev+=100;});};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[gameStage==='start'&&/*#__PURE__*/_jsx(StartScreen,{startGame:startGame}),gameStage==='game'&&/*#__PURE__*/_jsx(Game,{backHome:backHome,endScreen:endScreen,word:pickedWord,tip:pickedCategory,letters:letters,guessedLetters:guessedLetters,setGuessedLetters:setGuessedLetters,wrongLetters:wrongLetters,guesses:guesses,score:score,clear:clearLetterStates,addScore:addScore,start:startGame}),gameStage==='end'&&/*#__PURE__*/_jsx(GameOver,{retry:retry,backHome:backHome,score:score,start:startGame})]});}export default App;","map":{"version":3,"names":["useState","wordsList","StartScreen","Game","GameOver","stages","id","name","App","gameStage","setGameStage","words","pickedWord","setPickedWord","pickedCategory","setPickedCategory","letters","setLetters","guessedLetters","setGuessedLetters","wrongLetters","setWrongLetters","guesses","setGuesses","score","setScore","pickWordAndCategory","categories","Object","keys","category","Math","floor","random","length","word","startGame","wordLetters","split","map","a","toLowerCase","backHome","endScreen","retry","clearLetterStates","addScore","prev"],"sources":["C:/Users/Tadeu/Desktop/secret-word/src/App.js"],"sourcesContent":["// CSS\nimport './App.css';\n\n// React\nimport { useState } from 'react';\n\n// Data\nimport {wordsList} from './data/words'\n\n// Components\nimport StartScreen from './components/StartScreen';\nimport Game from './components/Game';\nimport GameOver from './components/GameOver';\n\nconst stages = [\n  {id: 1, name: \"start\"},\n  {id: 2, name: \"game\"},\n  {id: 3, name: \"end\"}\n]\n\nfunction App() {\n  const [gameStage, setGameStage] = useState(stages[0].name)\n  const [words] = useState(wordsList)\n\n  const [pickedWord, setPickedWord] = useState(\"\")\n  const [pickedCategory, setPickedCategory] = useState(\"\")\n  const [letters, setLetters] = useState([])\n\n  const [guessedLetters, setGuessedLetters] = useState([])\n  const [wrongLetters, setWrongLetters] = useState([])\n  const [guesses, setGuesses] = useState(3)\n  const [score, setScore] = useState(0)\n\n  const pickWordAndCategory = () => {\n    // Pick random category\n    const categories = Object.keys(words)\n    const category = categories[Math.floor(Math.random() * Object.keys(categories).length)]\n\n    // Pick random word\n    const word = words[category][Math.floor(Math.random() * words[category].length)]\n\n    return {category, word}\n  }\n\n  // Navigation\n  const startGame = () => {\n    const {category, word} = pickWordAndCategory()\n\n    // Create array letters\n    let wordLetters = word.split(\"\")\n    wordLetters = wordLetters.map((a) => a.toLowerCase())\n    // console.log(wordLetters)\n\n    // Fill states\n    setPickedCategory(category)\n    setPickedWord(word)\n    setLetters(wordLetters)\n    setGuessedLetters([])\n    setWrongLetters([])\n    setGuesses(3)\n\n    setGameStage(stages[1].name)\n  }\n  const backHome = () => {\n    setGameStage(stages[0].name)\n  }\n  const endScreen = () => {\n    setGameStage(stages[2].name)\n  }\n  const retry = () => {\n    setGameStage(stages[1].name)\n  }\n\n  const clearLetterStates = () => {\n    setGuessedLetters([])\n    setWrongLetters([])\n  }\n\n  const addScore = () => {\n    setScore((prev) => (prev += 100))\n  }\n\n  return (\n    <div className=\"App\">\n      {gameStage === 'start' && <StartScreen startGame={startGame} />}\n      {gameStage === 'game' &&\n      <Game \n        backHome={backHome}\n        endScreen={endScreen}\n        word={pickedWord}\n        tip={pickedCategory}\n        letters={letters}\n        guessedLetters={guessedLetters}\n        setGuessedLetters={setGuessedLetters}\n        wrongLetters={wrongLetters}\n        guesses={guesses}\n        score={score}\n        clear={clearLetterStates}\n        addScore={addScore}\n        start={startGame}\n\n      />}\n      {gameStage === 'end' && <GameOver retry={retry} backHome={backHome} score={score} start={startGame}/>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}