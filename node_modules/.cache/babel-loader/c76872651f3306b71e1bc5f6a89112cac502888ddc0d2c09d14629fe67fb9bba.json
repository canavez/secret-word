{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tadeu\\\\Desktop\\\\Curso React Udemy\\\\6_SECRET_WORD\\\\secretword\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport './Game.css';\nimport { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = _ref => {\n  _s();\n  let {\n    backHome,\n    endScreen,\n    word,\n    tip,\n    letters,\n    guessedLetters,\n    wrongLetters,\n    guesses,\n    score,\n    clear,\n    addScore,\n    start\n  } = _ref;\n  const [newGuesses, setNewGuesses] = useState(guesses);\n  const [letter, setLetter] = useState(\"\");\n  const letterInputRef = useRef(null);\n  const uniqueLetters = [...new Set(letters)];\n  const handleTry = e => {\n    e.preventDefault();\n    console.log(letter);\n    verifyLetter();\n    setLetter(\"\");\n    letterInputRef.current.focus();\n  };\n  const verifyLetter = () => {\n    console.log(letter);\n    if (guessedLetters.includes(letter) || wrongLetters.includes(letter)) {\n      return;\n    }\n    if (letters.includes(letter)) {\n      guessedLetters.push(letter);\n    } else {\n      setNewGuesses(prev => prev - 1);\n      wrongLetters.push(letter);\n      console.log(wrongLetters);\n    }\n    console.log(uniqueLetters);\n    console.log(guessedLetters);\n  };\n\n  // Check guesses\n  useEffect(() => {\n    if (newGuesses <= 0) {\n      clear();\n      console.log(guessedLetters);\n      endScreen();\n    }\n  }, [newGuesses]);\n\n  // Check win condition\n  useEffect(() => {\n    console.log(uniqueLetters.length);\n    console.log(guessedLetters.length);\n    if (guessedLetters.length === uniqueLetters.length) {\n      console.log('é igual');\n      addScore();\n      start();\n    }\n  }, [guessedLetters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"points\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pontua\\xE7\\xE3o: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Adivinhe a palavra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"tip\",\n      children: [\"Dica: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: tip.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"tentativas\",\n      children: [\"Voc\\xEA ainda tem \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: newGuesses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 50\n      }, this), \" tentativa(s).\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wordContainer\",\n      children: letters.map((letter, i) => guessedLetters.includes(letter) ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"letter\",\n        children: letter\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"blankSquare\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letterContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tente adivinhar uma letra:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleTry,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"letter\",\n          maxLength: \"1\",\n          required: true,\n          onChange: e => setLetter(e.target.value),\n          value: letter,\n          ref: letterInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonTry\",\n          children: \"Tentar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrongLetterContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Letras erradas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), wrongLetters.map((letter, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: letter\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: backHome,\n      className: \"buttonGame\",\n      children: \"In\\xEDcio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: endScreen,\n      className: \"buttonGame\",\n      children: \"Tela Final\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"4HGLTjeZsTgo3NaFsz6urdoOGO4=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useRef","useEffect","Game","backHome","endScreen","word","tip","letters","guessedLetters","wrongLetters","guesses","score","clear","addScore","start","newGuesses","setNewGuesses","letter","setLetter","letterInputRef","uniqueLetters","Set","handleTry","e","preventDefault","console","log","verifyLetter","current","focus","includes","push","prev","length","toUpperCase","map","i","target","value"],"sources":["C:/Users/Tadeu/Desktop/Curso React Udemy/6_SECRET_WORD/secretword/src/components/Game.js"],"sourcesContent":["import './Game.css'\r\nimport { useState, useRef, useEffect } from 'react'\r\n\r\nconst Game = ({backHome, endScreen, word, tip, letters, guessedLetters, wrongLetters, guesses, score, clear, addScore, start}) => {\r\n\r\n  const [newGuesses, setNewGuesses] = useState(guesses)\r\n  const [letter, setLetter] = useState(\"\")\r\n  const letterInputRef = useRef(null)\r\n  const uniqueLetters = [...new Set(letters)]\r\n\r\n  const handleTry = (e) => {\r\n    e.preventDefault()\r\n    console.log(letter)\r\n\r\n    verifyLetter()\r\n\r\n    setLetter(\"\")\r\n    letterInputRef.current.focus()\r\n  }\r\n\r\n  const verifyLetter = () => {\r\n    console.log(letter)\r\n    \r\n\r\n    if (guessedLetters.includes(letter) || wrongLetters.includes(letter)) {\r\n      return\r\n    }\r\n\r\n    if (letters.includes(letter)) {\r\n      guessedLetters.push(letter)\r\n    } else {\r\n      setNewGuesses((prev) => prev - 1)\r\n      wrongLetters.push(letter)\r\n      console.log(wrongLetters)\r\n    }\r\n\r\n    console.log(uniqueLetters)\r\n    console.log(guessedLetters)\r\n  }\r\n\r\n  // Check guesses\r\n  useEffect(() => {\r\n\r\n    if (newGuesses <= 0) {\r\n\r\n      clear()\r\n      console.log(guessedLetters)\r\n      endScreen()\r\n    }\r\n\r\n  }, [newGuesses])\r\n\r\n  // Check win condition\r\n  useEffect(() => {\r\n    \r\n    console.log(uniqueLetters.length)\r\n    console.log(guessedLetters.length)\r\n\r\n    if (guessedLetters.length === uniqueLetters.length) {\r\n      console.log('é igual')\r\n      addScore()\r\n      start();\r\n    }\r\n\r\n  }, [guessedLetters])\r\n\r\n\r\n  return (\r\n    <div className='game'>\r\n        <div className='points'>\r\n          <p>Pontuação: {score}</p>\r\n        </div>\r\n        <h2>Adivinhe a palavra</h2>\r\n        <h3 className='tip'>Dica: <span>{tip.toUpperCase()}</span></h3>\r\n        <p className='tentativas'>Você ainda tem <span>{newGuesses}</span> tentativa(s).</p>\r\n        <div className=\"wordContainer\">\r\n          {letters.map((letter, i) =>\r\n            guessedLetters.includes(letter) ? (\r\n              <span key={i} className=\"letter\">{letter}</span>\r\n            ) : (\r\n              <span key={i} className=\"blankSquare\"></span>\r\n            )\r\n          )}\r\n        </div>\r\n        <div className=\"letterContainer\">\r\n          <p>Tente adivinhar uma letra:</p>\r\n          <form onSubmit={handleTry}>\r\n            <input\r\n              type=\"text\"\r\n              name='letter'\r\n              maxLength=\"1\"\r\n              required\r\n              onChange={(e) => setLetter(e.target.value)}\r\n              value={letter}\r\n              ref={letterInputRef}\r\n              />\r\n            <button className='buttonTry'>Tentar</button>\r\n          </form>\r\n        </div>\r\n        <div className=\"wrongLetterContainer\">\r\n          <p>Letras erradas:</p>\r\n          {wrongLetters.map((letter, i) => (\r\n            <span key={i}>{letter}</span>\r\n          ))}\r\n        </div>\r\n\r\n\r\n        <button onClick={backHome} className='buttonGame'>Início</button>\r\n        <button onClick={endScreen} className='buttonGame'>Tela Final</button>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Game"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}